//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#include "ManipulatorEventServiceInHandler.hh"

#include <iostream>

ManipulatorEventServiceInHandler::ManipulatorEventServiceInHandler(Smart::InputSubject<Smart::EventInputType<CommManipulatorObjects::CommManipulatorEventResult>> *subject, const int &prescaleFactor)
:	ManipulatorEventServiceInHandlerCore(subject, prescaleFactor)
{
	std::cout << "constructor ManipulatorEventServiceInHandler\n";
}
ManipulatorEventServiceInHandler::~ManipulatorEventServiceInHandler() 
{
	std::cout << "destructor ManipulatorEventServiceInHandler\n";
}

void ManipulatorEventServiceInHandler::on_ManipulatorEventServiceIn(const Smart::EventInputType<CommManipulatorObjects::CommManipulatorEventResult> &input)
{
	// implement business logic here
	// (do not use blocking calls here, otherwise this might block the InputPort ManipulatorEventServiceIn)
}
